import { useEffect } from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { GiWashingMachine } from 'react-icons/gi';
import { connect } from 'react-redux';
import { bindActionCreators, Dispatch } from 'redux';
import jwtDecode from 'jwt-decode';
import IconText from '@components/IconText';
import token from '@utils/token';
import IAuthAction from '@action/interface/auth';
import AuthAction from '@store/action-creators/AuthAction';

interface IProps {
  getUser: (_id: string) => (_dispatch: Dispatch<IAuthAction>) => Promise<void>
}

const Home: NextPage<IProps> = ({ getUser }) => {
  const router = useRouter();

  const fetchData = async () => {
    const dataToken = token.getToken()?.accessToken;
    if (dataToken) {
      const tokenDecoded: { aud: string } = jwtDecode(dataToken);
      await Promise.resolve(getUser(tokenDecoded.aud));
    }
  };

  useEffect(() => {
    fetchData();
    if (!token.isAuth()) router.replace('/member');
    else router.replace('/dashboard');
  }, []);

  return (
    <div className='home-container'>
      <Head>
        <title>Smart Laundry</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className='main'>
        <IconText className='home-icon' />
        <h1>Selamat Datang</h1>
        <div className='loading-bar'></div>
      </main>

      <footer className='footer'>
        <span className='powered'>Powered by</span>
        <span className='logo-footer'>
          <GiWashingMachine className='logo-icon' />
          <span className='logo-text'>
            Smart<span>Laundry</span>
          </span>
        </span>
      </footer>
    </div>
  );
};

const mapDispatchToProps = (dispatch: Dispatch<IAuthAction>) =>(
  bindActionCreators({
    getUser: AuthAction.getDataUser
  }, dispatch)
);

export default connect(null, mapDispatchToProps)(Home);
